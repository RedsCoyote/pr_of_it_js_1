/* Изучите поведение оператора "+":
 как он работает с числами, как - со строками. */
console.log(1 + 2);  // => 3: с числами это просто сложение
console.log('1' + '2');  // => 12: со строками - конкатенация
console.log(1 + '2');  // => 12: если хотя-бы один аргумент строка - второй приводится к строке

/* А как к существующему объекту добавить новое свойство */
var obj = {}; // => {}:  пустой объект
console.log(obj);
obj.foo = 'bar';
obj.baz = 42;
console.log(obj); // => { foo: 'bar', baz: 42 }: добавили два свойства

/* Найдите способ (прочитав документацию) удалить свойство из объекта */
delete obj.foo;
console.log(obj); // => { baz: 42 }: одно свойство удалено

/* что будет, если есть глобальная переменная с именем, допустим, x, и в функции объявлена переменная с таким же именем.
 Что если функция попытается изменить эту переменную - к которой из них будет обращение?  */
//  Ну, логично, что обращение будет к локальной переменной, т.к. она перекроет глобальную
var x = 10;
console.log(x);  // => 10 - это глобальная переменная
(function () {
  var x = 15;
  console.log(x);  // => 15 - это локальная переменная
  x += 5;
  console.log(x);  // => 20 - локальная переменная изменилась
})();

console.log(x);  // => 10 - глобальная осталась прежней

/* Напишите функцию, которая по размерам комнаты (ширина, длина, высота) возвращает площадь стен комнаты.
 Затем примените ее в программе, которая по размерам комнаты вычисляет - сколько нужно взять рулонов обоев,
 чтобы оклеить эту комнату? */

// В качестве аргументов использовал объекты, чтобы было вменяемое число переменных
function countWallpaperRolls(room, roll) {
  // return Math.ceil(2 * (room.width + room.length) * room.hight / (roll.width * roll.length));  // это если использовать
  // весь материал. Реально так конечно не клеят, поэтому посчитаем более прагматично
  return Math.ceil(2 * (room.width + room.length) / roll.width / Math.floor(roll.length / room.hight));
}

var room = { width: 3, length: 6, hight: 2.5 };
var roll = { width: 0.5, length: 10 };

console.log(countWallpaperRolls(room, roll));  // => 9 рулонов, логично, 18 погоммых метров стен, рулон шириной 0.5,
// значит надо 36 кусков. Каждый рулон режется на 4, значит надо 9 рулонов
// в моем случае оба варианта дают одинаковый результат, но если высота комнаты не является делителем для длины рулона,
// разница будет заметна
